# -*- coding: utf-8 -*-
"""Oṕtica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10WsFjoEGo--YmQV9D4ebbe_qS23dPcbb
"""

# Commented out IPython magic to ensure Python compatibility.
'libreria pylab'
# %pylab inline
from google.colab import drive
drive.mount('/content/drive')
import matplotlib.pyplot as plt
import numpy as np

'declaro la variable imagen'
im = imread("/content/drive/MyDrive/malus/60Grados.jpg")

'mostrar la variable imagen'
imshow(im)

'mostrar la forma de la imagen'
'3120 filas, 4160 columnas, 3(R,G,B)'
im.shape

'Tipo de variable que tiene guardada'
'uint 8 numeros enteros de 8 bits'
im.dtype

'im[fila, columna]'
im[1500,2500]

im[2500,1500]

'Tambien puedo ver la informacion por pixeles - ejemplo para Red'
im[1500,2500,0]

'guardar copia operacion de imagenes'
'Realizo primero una copia'
"""[:,:,2]=0 coja todas las filas todas las columnas de la componente 2(Blue) 
y hagala cero --- eliminar lo azul"""
im0 = im.copy()
im1 = im.copy()
im2 = im.copy()
im0[:,:,2]=0
im0[:,:,1]=0 
im1[:,:,0]=0 
im1[:,:,1]=0 
im2[:,:,0]=0
im2[:,:,2]=0

figsize(20,20)
subplot(141)
title("Completa")
imshow(im)
subplot(142)
title("Rojo")
imshow(im0)
subplot(143)
title("Azul")
imshow(im1)
subplot(144)
title("Verde")
imshow(im2)

'matrices modificadas se pueden volver imagenes'
 imsave("filtro_rojo.jpg", im0)

figsize(5,5)
imshow(im)

'Seleccionar un pedazo de imagen'
imrecortada =  im[1400:1900,2000:2500]
imshow(imrecortada)



i=0
l=[]
ang=[]
for i in range(0,370,10):
  a = imread(f'/content/drive/MyDrive/malus/{int(i)}Grados.jpg')  
  b = a[1400:1900,2000:2500]
  l.append(b.mean())
  ang.append(i)
l=array(l)
ang=array(ang)
plot(ang,(l-l.min())/(l.max()-l.min()))
plt.xlabel('Ángulo (Grados)') 
plt.ylabel(u'Intensidad normalizada')
plot(ang,cos(radians(ang))**2,"r*")

figsize(5,5)
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(ang*2*pi/360, l-l.min())
ax.set_rmax(250)
ax.set_rticks([50, 100,250])  # Less radial ticks
#ax.set_rlabel_position(-22.5)  # Move radial labels away from plotted line
ax.grid(True)